/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakeManager, StakeManagerInterface } from "../StakeManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeDelayBlocks",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelayBlocks",
        type: "uint256",
      },
    ],
    name: "StakeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawBlock",
        type: "uint256",
      },
    ],
    name: "StakeUnlocking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "addDepositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_unstakeDelayBlocks",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "getStakeInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint96",
            name: "stake",
            type: "uint96",
          },
          {
            internalType: "uint32",
            name: "unstakeDelayBlocks",
            type: "uint32",
          },
          {
            internalType: "uint96",
            name: "withdrawStake",
            type: "uint96",
          },
          {
            internalType: "uint32",
            name: "withdrawBlock",
            type: "uint32",
          },
        ],
        internalType: "struct StakeManager.StakeInfo",
        name: "stakeInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "requiredStake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredDelayBlocks",
        type: "uint256",
      },
    ],
    name: "isStaked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint96",
        name: "stake",
        type: "uint96",
      },
      {
        internalType: "uint32",
        name: "unstakeDelayBlocks",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "withdrawStake",
        type: "uint96",
      },
      {
        internalType: "uint32",
        name: "withdrawBlock",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstakeDelayBlocks",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610adf380380610adf83398101604081905261002f91610044565b60e01b6001600160e01b031916608052610071565b60006020828403121561005657600080fd5b815163ffffffff8116811461006a57600080fd5b9392505050565b60805160e01c610a5061008f60003960006102aa0152610a506000f3fe6080604052600436106100865760003560e01c8063bb9fe6bf11610059578063bb9fe6bf1461016d578063c23a5cea14610182578063c3453153146101a2578063e7c350e314610298578063f3737f19146102e157600080fd5b80630396cb601461008b57806316934fc4146100a05780631c112a44146101355780634a58db1914610165575b600080fd5b61009e610099366004610968565b6102f4565b005b3480156100ac57600080fd5b506100f96100bb36600461090f565b6000602081905290815260409020546001600160601b038082169163ffffffff600160601b8204811692600160801b83041691600160e01b90041684565b604080516001600160601b03958616815263ffffffff948516602082015294909216918401919091521660608201526080015b60405180910390f35b34801561014157600080fd5b50610155610150366004610933565b61047f565b604051901515815260200161012c565b61009e610507565b34801561017957600080fd5b5061009e610513565b34801561018e57600080fd5b5061009e61019d36600461090f565b610686565b3480156101ae57600080fd5b506102476101bd36600461090f565b604080516080810182526000808252602082018190529181018290526060810191909152506001600160a01b031660009081526020818152604091829020825160808101845290546001600160601b03808216835263ffffffff600160601b8304811694840194909452600160801b82041693820193909352600160e01b90920416606082015290565b60405161012c919060006080820190506001600160601b03808451168352602084015163ffffffff808216602086015282604087015116604086015280606087015116606086015250505092915050565b3480156102a457600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161012c565b61009e6102ef36600461090f565b6108b7565b3360009081526020819052604090205463ffffffff600160601b909104811690821610156103695760405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f7420646563726561736520756e7374616b6520626c6f636b73000060448201526064015b60405180910390fd5b336000908152602081905260408120546001600160601b03600160801b82048116916103979134911661098e565b6103a1919061098e565b604080516080810182526001600160601b0383811680835263ffffffff878116602080860182815260008789018181526060890182815233808452838652928b902099518a54945192519151908a166001600160801b031990951694909417600160601b92881692909202919091176001600160801b0316600160801b91909816026001600160e01b031696909617600160e01b91909416029290921790945584519182528101929092529293507f270d6dd254edd1d985c81cf7861b8f28fb06b6d719df04d90464034d4341244091015b60405180910390a25050565b6001600160a01b038316600090815260208181526040808320815160808101835290546001600160601b0380821680845263ffffffff600160601b8404811696850196909652600160801b830490911693830193909352600160e01b9004909216606083015284118015906104fe575082816020015163ffffffff1610155b95945050505050565b61051160006102f4565b565b3360009081526020819052604090208054600160e01b900463ffffffff16156105705760405162461bcd60e51b815260206004820152600f60248201526e616c72656164792070656e64696e6760881b6044820152606401610360565b80546001600160601b03161580159061059657508054600160601b900463ffffffff1615155b6105d75760405162461bcd60e51b81526020600482015260126024820152716e6f207374616b6520746f20756e6c6f636b60701b6044820152606401610360565b80546000906105f390600160601b900463ffffffff16436109a6565b82546001600160801b0381166bffffffffffffffffffffffff60801b19600160e01b63ffffffff8516908102918216929092176001600160601b039384169190931617600160801b02919091176bffffffffffffffffffffffff1916845560405190815290915033907fab3a43860ac8cdb29929ba1a1f556b4decf9617f4811c190010e1672e55839b190602001610473565b3360009081526020818152604091829020825160808101845290546001600160601b03808216835263ffffffff600160601b83048116948401859052600160801b830490911694830194909452600160e01b900490921660608301521561078a57600081604001516001600160601b0316116107385760405162461bcd60e51b81526020600482015260116024820152706e6f20756e6c6f636b6564207374616b6560781b6044820152606401610360565b43816060015163ffffffff16111561078a5760405162461bcd60e51b81526020600482015260156024820152745769746864726177616c206973206e6f742064756560581b6044820152606401610360565b8051604082015160009161079d916109ce565b60408051608081018252600080825260208681015163ffffffff9081168285019081528486018481526060860185815233865293859052868520955186549251915194518416600160e01b026001600160e01b036001600160601b03968716600160801b02166001600160801b0393909516600160601b026001600160801b031990941691861691909117929092171691909117179092559151921692506001600160a01b0385169183156108fc0291849190818181858888f1935050505015801561086d573d6000803e3d6000fd5b50604080516001600160a01b03851681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3910160405180910390a2505050565b6001600160a01b038116600090815260208190526040812080543492906108e89084906001600160601b03166109ce565b92506101000a8154816001600160601b0302191690836001600160601b0316021790555050565b60006020828403121561092157600080fd5b813561092c81610a02565b9392505050565b60008060006060848603121561094857600080fd5b833561095381610a02565b95602085013595506040909401359392505050565b60006020828403121561097a57600080fd5b813563ffffffff8116811461092c57600080fd5b600082198211156109a1576109a16109ec565b500190565b600063ffffffff8083168185168083038211156109c5576109c56109ec565b01949350505050565b60006001600160601b038083168185168083038211156109c5576109c55b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610a1757600080fd5b5056fea26469706673582212206e6a3a61e8c8d377abf23d26868668abfebe191fa0ebb56f49c275caae182e9e64736f6c63430008070033";

type StakeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeManager__factory extends ContractFactory {
  constructor(...args: StakeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _unstakeDelayBlocks: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakeManager> {
    return super.deploy(
      _unstakeDelayBlocks,
      overrides || {}
    ) as Promise<StakeManager>;
  }
  getDeployTransaction(
    _unstakeDelayBlocks: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_unstakeDelayBlocks, overrides || {});
  }
  attach(address: string): StakeManager {
    return super.attach(address) as StakeManager;
  }
  connect(signer: Signer): StakeManager__factory {
    return super.connect(signer) as StakeManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeManagerInterface {
    return new utils.Interface(_abi) as StakeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakeManager {
    return new Contract(address, _abi, signerOrProvider) as StakeManager;
  }
}
